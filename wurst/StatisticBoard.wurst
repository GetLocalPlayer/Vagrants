package StatisticBoard
import LinkedList
import HashMap
import ClosureTimers
import ClosureEvents
import Reference


@configurable constant COLUMN_TITLE_COLOR = "|cffffcc00"
@configurable constant TOTAL_TITLE_COLOR = "|cffc3dbff"
@configurable constant LEFT_PLAYER_COLOR = "|cff969696"

@configurable constant COMMAND_RESET = "-ResetStatistic"
@configurable constant SHORT_COMMAND_RESET = "-rs"
@configurable constant COMMAND_SHOW_TOTAL = "-ShowTotalStatistic"
@configurable constant SHORT_COMMAND_SHOW_TOTAL = "-sts"


init
	let userPlayers = new LinkedList<player>
	let totalPlayerDamage = new HashMap<player, real>
	let totalPlayerKills = new HashMap<player, int>
	let currentPlayerDamage = new HashMap<player, real>
	let currentPlayerKills = new HashMap<player, int>
	let totalDamage = new Reference<real>(0)
	let totalKills = new Reference<int>(0)

	for i = 0 to bj_MAX_PLAYER_SLOTS - 1
		let p = players[i]
		if p.getController() == MAP_CONTROL_USER and p.getSlotState() == PLAYER_SLOT_STATE_PLAYING
			userPlayers.add(p)
			totalPlayerDamage.put(p, 0)
			totalPlayerKills.put(p, 0)
			currentPlayerDamage.put(p, 0)
			currentPlayerKills.put(p, 0)


	nullTimer() () ->
		let board = CreateMultiboard()
		..setItemsStyle(true, false)
		..setTitle("Statistic")
		..setItemsValue("0")
		..setColumnCount(3)
		..setRowCount(userPlayers.size() + 2)
		..setColumnWidth(0, 0.12)
		..setColumnWidth(1, 0.08)
		..setColumnWidth(2, 0.025)
		..setItemValue(0, 0, "{0}Name:|r".format(COLUMN_TITLE_COLOR))
		..setItemValue(0, 1, "{0}Damage:|r".format(COLUMN_TITLE_COLOR))
		..setItemValue(0, 2, "{0}Kills:|r".format(COLUMN_TITLE_COLOR))
		for row = 1 to board.getRowCount() - 2
			board.setItemValue(row, 0, "{0} {1}".format(row.toString(), userPlayers.get(row - 1).getNameColored()))
		let lastRow = board.getRowCount() - 1
		board..setItemValue(lastRow, 0, "{0}Total|r".format(TOTAL_TITLE_COLOR))
		..setItemValue(lastRow, 1, "0")
		..setItemValue(lastRow, 2, "0")

		..show()
		..maximize()

		EventListener.add(EVENT_PLAYER_UNIT_DAMAGED) ->
			let target = EventData.getTriggerUnit()
			let source = EventData.getEventDamageSource()
			if source != null and target.isEnemyOf(source) and userPlayers.has(source.getOwner(()))
				let sourceOwner = source.getOwner()
				let eventDamage = EventData.getEventDamage()
				let totalValue = totalPlayerDamage.get(sourceOwner) + eventDamage
				let currentValue = currentPlayerDamage.get(sourceOwner) + eventDamage
				totalPlayerDamage.put(sourceOwner, totalValue)
				currentPlayerDamage.put(sourceOwner, currentValue)
				let i = userPlayers.indexOf(sourceOwner)
				board.setItemValue(i + 1, 1, currentValue.toInt())
				totalDamage.val += eventDamage
				board.setItemValue(userPlayers.size() + 1, 1, totalDamage.val.toInt())

		EventListener.add(EVENT_PLAYER_UNIT_DEATH) ->
			let target = EventData.getDyingUnit()
			let source = EventData.getKillingUnit()
			if source != null and target.isEnemyOf(source) and userPlayers.has(source.getOwner())
				let sourceOwner = source.getOwner()
				let totalValue = totalPlayerKills.get(sourceOwner) + 1
				let currentValue = currentPlayerKills.get(sourceOwner) + 1
				totalPlayerKills.put(sourceOwner, totalValue)
				currentPlayerKills.put(sourceOwner, currentValue)
				let i = userPlayers.indexOf(sourceOwner)
				board.setItemValue(i + 1, 2, currentValue)
				totalKills.val++
				board.setItemValue(userPlayers.size() + 1, 2, totalKills.val)

		EventListener.add(EVENT_PLAYER_LEAVE) ->
			let p = EventData.getTriggerPlayer()
			let row = userPlayers.indexOf(p) + 1
			board.setItemValue(row, 0, "{0} {1}{2}|r".format(row.toString(), LEFT_PLAYER_COLOR, p.getName()))

		EventListener.add(EVENT_PLAYER_CHAT_FILTER) () ->
			let msg = EventData.getChatMessage().toLowerCase()
			let cmd = COMMAND_RESET.toLowerCase()
			let short = SHORT_COMMAND_RESET.toLowerCase()
			if msg.startsWith(cmd) or msg.startsWith(short)
				let triggerPlayer = EventData.getTriggerPlayer()
				if localPlayer == triggerPlayer
					for p in userPlayers
						currentPlayerDamage.put(p, 0)
						currentPlayerKills.put(p, 0)
					totalDamage.val = 0
					totalKills.val = 0
				for row = 1 to board.getRowCount() - 1
					let damageItem = board.getItem(row, 1)
					let killsItem = board.getItem(row, 2)
					if localPlayer == triggerPlayer
						damageItem.setValue("0")
						killsItem.setValue("0")
					damageItem.release()
					killsItem.release()
					
				
		EventListener.add(EVENT_PLAYER_CHAT_FILTER) () ->
			let msg = EventData.getChatMessage().toLowerCase()
			let cmd = COMMAND_SHOW_TOTAL.toLowerCase()
			let short = SHORT_COMMAND_SHOW_TOTAL.toLowerCase()
			if msg.startsWith(cmd) or msg.startsWith(short)
				let triggerPlayer = EventData.getTriggerPlayer()
				if localPlayer == triggerPlayer
					totalDamage.val = 0
					totalKills.val = 0
					for p in userPlayers
						currentPlayerDamage.put(p, totalPlayerDamage.get(p))
						currentPlayerKills.put(p, totalPlayerKills.get(p))
						totalDamage.val += totalPlayerDamage.get(p)
						totalKills.val += totalPlayerKills.get(p)
				for row = 1 to board.getRowCount() - 2
					let damageItem = board.getItem(row, 1)
					let killsItem = board.getItem(row, 2)
					if localPlayer == triggerPlayer
						damageItem.setValue(currentPlayerDamage.get(userPlayers.get(row - 1)).toInt())
						killsItem.setValue(currentPlayerKills.get(userPlayers.get(row - 1)))
					damageItem.release()
					killsItem.release()
				let totalDamageItem = board.getItem(userPlayers.size() + 1, 1)
				let totalKillsItem = board.getItem(userPlayers.size() + 1, 2)
				if localPlayer == triggerPlayer
					totalDamageItem.setValue(totalDamage.val.toInt())
					totalKillsItem.setValue(totalKills.val)
				totalDamageItem.release()
				totalKillsItem.release()