package SearingArrows
import Assets
import ObjectIdGenerator
import AbilityObjEditing
import AbilityTooltipGenerator
import AssasinShop
import HotkeyFactory


constant SHOP_COST = 1
constant LEVELS = 5
constant HOTKEY = getHotkey()
constant ICON = Icons.bTNSearingArrowsOn
constant NAME = "Searing Arrows"
constant DESCRIPTION = "Adds bonus fire damage to an attack against enemies, but drains mana with each shot fired.|n|n[|cffff0000Attack Modifier|r]"
constant TARGETS_ALLOWED = "air,ground,structure,enemy"
constant DAMAGE = [35, 45, 55, 65, 75]
constant MANACOST = [9, 12, 15, 18, 21]

constant ABIL_ID = compiletime(ABIL_ID_GEN.next())


@compiletime function build()
	let tooltipGen = new AbilityTooltipGenerator(NAME, DESCRIPTION)
	new AbilityDefinitionMoonPriestessSearingArrows(ABIL_ID)
	..setIconNormal(ICON)
	..setIconTurnOff(ICON)
	..setHeroAbility(true)
	..setRequirements("")
	..setRace(Race.Human)
	..setName(NAME)
	..presetHotkey(HOTKEY)
	..registerTooltipGenerator(tooltipGen)
	..tooltipStartListen()
	..setLevels(LEVELS)
	..addTooltipProperty("Damage", (int lvl) -> DAMAGE[lvl - 1])
	..presetManaCost((int lvl) -> MANACOST[lvl - 1])
	..tooltipStopListen()
	..presetDamageBonus((int lvl) -> DAMAGE[lvl - 1].toReal())
	..presetCastRange((int lvl) -> 600)
	..presetCooldown((int lvl) -> 0)
	..presetTargetsAllowed((int lvl) -> TARGETS_ALLOWED)
	..presetTooltipTurnOff((int lvl) -> "|cffc3dbffRight-click to activate auto-casting.|r")
	..presetTooltipTurnOffExtended((int lvl) -> "|cffc3dbffRight-click to deactivate auto-casting.|r")
	assasinShopDef.addAbilitySold(ABIL_ID, false, ICON, NAME, tooltipGen.getTooltipLearnExtended(), SHOP_COST)