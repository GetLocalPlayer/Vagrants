package ForkedLightning
import Assets
import ObjectIdGenerator
import AbilityObjEditing
import AbilityTooltipGenerator
import HotkeyFactory
import NatureServantShop


public class ForkedLightning
	static constant int LEVELS = 5
	static constant int SHOP_COST = 1
	static constant HOTKEY = getHotkey()
	static constant ICON = Icons.bTNMonsoon
	static constant NAME = "Forked Lightning"
	static constant DESCRIPTION = "Calls forth a cone of lightning to damage enemies."
	static constant int NUMBER_OF_TARGETS = 7
	static constant real array DAMAGE = [120, 145,  170, 195, 220]
	static constant real CAST_RANGE = 600
	static constant real AOE = 100
	static constant real FINAL_AOE = 350
	static constant real COOLDOWN = 8
	static constant int array MANACOST = [75, 90, 105, 120, 135]
	static constant TARGETS_ALLOWED = "ground,air,organic,enemies"
	static constant ABIL_ID = compiletime(ABIL_ID_GEN.next())

	@compiletime protected static function build()
		let tooltipGen = new AbilityTooltipGenerator(NAME, DESCRIPTION)
		new AbilityDefinitionSeaWitchForkedLightning(ABIL_ID)
		..setIconNormal(ICON)
		..setHeroAbility(true)
		..setRequirements("")
		..setRace(Race.Human)
		..setName(NAME)
		..registerTooltipGenerator(tooltipGen)
		..tooltipStartListen()
		..setLevels(LEVELS)
		..presetHotkey(HOTKEY)
		..presetCooldown(lvl -> COOLDOWN)
		..presetCastRange(lvl -> CAST_RANGE)
		..presetManaCost(lvl -> MANACOST[lvl - 1])
		..addTooltipProperty("Damage", (int lvl) -> DAMAGE[lvl - 1])
		..addTooltipProperty("Number of Targets", (int lvl) -> NUMBER_OF_TARGETS)
		..tooltipStopListen()
		..presetNumberofTargetsHit(lvl -> NUMBER_OF_TARGETS)
		..presetDamageperTarget(lvl -> DAMAGE[lvl - 1])
		..presetDistance(lvl -> CAST_RANGE)
		..presetAreaofEffect(lvl -> AOE)
		..presetFinalArea(lvl -> FINAL_AOE)
		..presetTargetsAllowed(lvl -> TARGETS_ALLOWED)
		natureServantShopDef.addAbilitySold(ABIL_ID, false, ICON, NAME, tooltipGen.getTooltipLearnExtended(), SHOP_COST)
